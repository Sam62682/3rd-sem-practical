
from cryptography.fernet import Fernet

# Function to generate a key
def generate_key():
    return Fernet.generate_key()

# Function to encrypt a password
def encrypt_password(password, key):
    fernet = Fernet(key)
    encrypted_password = fernet.encrypt(password.encode())
    return encrypted_password

# Function to decrypt a password
def decrypt_password(encrypted_password, key):
    fernet = Fernet(key)
    decrypted_password = fernet.decrypt(encrypted_password).decode()
    return decrypted_password

# Main code
if __name__ == "__main__":
    # Generate a key
    key = generate_key()
    # print(f"Generated key: {key.decode()}")  # Show the generated key

    # Input password from the user
    password = input("Enter a password to encrypt: ")

    # Encrypt the password
    encrypted = encrypt_password(password, key)
    print(f"Encrypted password: {encrypted.decode()}")  # Show the encrypted password as a string

    # Decrypt the password
    decrypted = decrypt_password(encrypted, key)
    print(f"Decrypted password: {decrypted}")
